---
# configure_gnupg/tasks/config.yml

# Install GnuPG configuration files and scripts

# You will often need to run refresh-smartcard to "read" the device correctly in new shell sessions and on reboots
- name: Install /usr/local/bin/refresh-smartcard
  ansible.builtin.copy:
    remote_src: no
    src: refresh-smartcard.sh
    mode: '0755'
    owner: root
    group: root
    dest: /usr/local/bin/refresh-smartcard
  become: yes
  become_method: sudo

- name: Create ~/.gnupg
  ansible.builtin.file:
    path: "/home/{{ ansible_facts['env']['USER'] }}/.gnupg"
    state: directory
    mode: '0700'
    owner: "{{ ansible_facts['env']['USER'] }}"
    group: "{{ ansible_facts['env']['USER'] }}"

- name: Write gpg-agent.conf
  ansible.builtin.copy:
    dest: "/home/{{ ansible_facts['env']['USER'] }}/.gnupg/gpg-agent.conf"
    mode: '0600'
    owner: "{{ ansible_facts['env']['USER'] }}"
    group: "{{ ansible_facts['env']['USER'] }}"
    content: |
      # gpg-agent.conf
      # https://github.com/drduh/config/blob/master/gpg-agent.conf
      enable-ssh-support
      default-cache-ttl 60
      max-cache-ttl 120
      pinentry-program /usr/bin/pinentry-curses

- name: Write gpg.conf
  ansible.builtin.copy:
    dest: "/home/{{ ansible_facts['env']['USER'] }}/.gnupg/gpg.conf"
    mode: '0600'
    owner: "{{ ansible_facts['env']['USER'] }}"
    group: "{{ ansible_facts['env']['USER'] }}"
    content: |
      # gpg.conf
      # https://github.com/drduh/config/blob/master/gpg.conf
      personal-cipher-preferences AES256 AES192 AES
      personal-digest-preferences SHA512 SHA384 SHA256
      personal-compress-preferences ZLIB BZIP2 ZIP Uncompressed
      default-preference-list SHA512 SHA384 SHA256 AES256 AES192 AES ZLIB BZIP2 ZIP Uncompressed
      cert-digest-algo SHA512
      s2k-digest-algo SHA512
      s2k-cipher-algo AES256
      charset utf-8
      no-comments
      no-emit-version
      no-greeting
      keyid-format 0xlong
      list-options show-uid-validity
      verify-options show-uid-validity
      with-fingerprint
      require-cross-certification
      no-symkey-cache
      armor
      use-agent
      throw-keyids

- name: Add GnuPG SSH support to .bashrc
  ansible.builtin.blockinfile:
    path: /home/{{ ansible_facts['env']['USER'] }}/.bashrc
    append_newline: true
    prepend_newline: true
    block: |
      # Enable gpg smart card support for ssh
      export GPG_TTY="$(tty)"
      export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
      gpgconf --launch gpg-agent

      # You can alternatively use Bitwarden's SSH agent, either temporarily per-session by copy and pasting
      # one of the lines below into your terminal, or here in bashrc by commenting out the gpg SSH_AUTH_SOCK.
      # File > Settings > Enable SSH agent
      # https://bitwarden.com/help/ssh-agent/#configure-bitwarden-ssh-agent
      #export SSH_AUTH_SOCK=/home/$USER/.bitwarden-ssh-agent.sock
      #export SSH_AUTH_SOCK=/home/$USER/snap/bitwarden/current/.bitwarden-ssh-agent.sock
